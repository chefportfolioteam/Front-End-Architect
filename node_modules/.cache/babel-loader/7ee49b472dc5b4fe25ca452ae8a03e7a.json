{"ast":null,"code":"import _slicedToArray from \"/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/src/components/ChefDash.js\";\nimport React, { useState, useEffect } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport Logout from './Logout';\nimport { Link } from \"react-router-dom\";\nimport pictures from '../images';\n\nconst ChefDash = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1]; //get posts from api server using axioswithAuth\n\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = AbortController.signal;\n    axiosWithAuth().get(`/auth/user/${localStorage.getItem('userId')}`, {\n      signal: signal\n    }).then(res => setRecipes(res.data)).catch(err => console.log(err.res));\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, [recipes]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Chef DashBoard\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Recipes\"), recipes.map((item, index) => React.createElement(Link, {\n    key: index.id,\n    to: `/recipes/${item.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, item.mealtype, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: pictures[item.id],\n    alt: \"food\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), item.recipe_name, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))), React.createElement(Link, {\n    to: \"/create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Create Recipe\"), React.createElement(Logout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default ChefDash;","map":{"version":3,"sources":["/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/src/components/ChefDash.js"],"names":["React","useState","useEffect","axiosWithAuth","Logout","Link","pictures","ChefDash","props","recipes","setRecipes","abortController","AbortController","signal","get","localStorage","getItem","then","res","data","catch","err","console","log","cleanup","abort","map","item","index","id","mealtype","recipe_name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAKC,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,oBACKP,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAClBQ,OADkB;AAAA,QACTC,UADS,kBAEzB;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,eAAe,GAAG,IAAIC,eAAJ,EAAxB;AACA,UAAMC,MAAM,GAAGD,eAAe,CAACC,MAA/B;AACAV,IAAAA,aAAa,GACZW,GADD,CACM,cAAaC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EADlD,EACqD;AAAEH,MAAAA,MAAM,EAAEA;AAAV,KADrD,EAECI,IAFD,CAEMC,GAAG,IAAIR,UAAU,CAACQ,GAAG,CAACC,IAAL,CAFvB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,GAAhB,CAHd;AAIA,WAAO,SAASM,OAAT,GAAmB;AACtBb,MAAAA,eAAe,CAACc,KAAhB;AACH,KAFD;AAGH,GAVQ,EAUN,CAAChB,OAAD,CAVM,CAAT;AAaA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EASKA,OAAO,CAACiB,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KAEb,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAjB;AAAqB,IAAA,EAAE,EAAG,YAAWF,IAAI,CAACE,EAAG,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDF,IAAI,CAACG,QAAtD,EAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D,EAAqE;AAAK,IAAA,GAAG,EAAExB,QAAQ,CAACqB,IAAI,CAACE,EAAN,CAAlB;AAA4B,IAAA,GAAG,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArE,EAA8G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9G,EAAoHF,IAAI,CAACI,WAAzH,EAAqI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArI,CAFC,CATL,EAcQ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdR,EAgBO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBP,CADJ;AAsBH,CAtCA;;AAuCD,eAAexB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {axiosWithAuth} from '../utils/axiosWithAuth'\nimport Logout from './Logout'\nimport { Link } from \"react-router-dom\";\nimport pictures from '../images'\n\n\n\n\n const ChefDash = (props) => {\n    const [recipes, setRecipes] = useState([])\n    //get posts from api server using axioswithAuth\n    useEffect(() => {\n        const abortController = new AbortController()\n        const signal = AbortController.signal\n        axiosWithAuth()\n        .get(`/auth/user/${localStorage.getItem('userId')}`, { signal: signal })\n        .then(res => setRecipes(res.data))\n        .catch(err => console.log(err.res))\n        return function cleanup() {\n            abortController.abort()\n        }\n    }, [recipes])\n\n    \n    return (\n        <div>\n            \n            <h1>Chef DashBoard</h1>\n            <h1>Recipes</h1>\n           \n\n            \n          \n          \n            {recipes.map((item, index) => (\n            \n            <Link key={index.id} to={`/recipes/${item.id}`}>{item.mealtype}<br/>{<img src={pictures[item.id]}alt='food'/>}<br/>{item.recipe_name}<br/></Link> \n                     \n           ))}\n                <Link to='/create'>Create Recipe</Link>\n\n               <Logout />\n                \n        </div>\n        \n    )\n}\nexport default ChefDash;"]},"metadata":{},"sourceType":"module"}