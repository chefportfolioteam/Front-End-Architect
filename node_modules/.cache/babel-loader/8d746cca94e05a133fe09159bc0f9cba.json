{"ast":null,"code":"import _slicedToArray from \"/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/src/components/ChefDash.js\";\nimport React, { useState, useEffect } from 'react';\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\nimport Logout from './Logout';\nimport { Redirect, Link } from \"react-router-dom\";\n\nconst ChefDash = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recipes = _useState2[0],\n        setRecipes = _useState2[1]; //get posts from api server using axioswithAuth\n\n\n  useEffect(() => {\n    axiosWithAuth().get(`/auth/user/${localStorage.getItem('userId')}`).then(res => setRecipes(res.data)).catch(err => console.log(err.res));\n  }, [recipes]);\n  AbortController.abort();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Chef DashBoard\"), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Recipes\"), recipes.map(item => React.createElement(Link, {\n    to: `/recipes/${item.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, item.recipe_name, item.meal)), React.createElement(Link, {\n    to: \"/create\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Create Recipe\"), React.createElement(Logout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })) //Have an Add Button and this button\n  //will take us to the Add Recipe Form\n  //Put an onClick inside the div\n  ;\n};\n\nexport default ChefDash;","map":{"version":3,"sources":["/Users/codemasterflash/Desktop/LS_Projects/Front-End-Architect/src/components/ChefDash.js"],"names":["React","useState","useEffect","axiosWithAuth","Logout","Redirect","Link","ChefDash","props","recipes","setRecipes","get","localStorage","getItem","then","res","data","catch","err","console","log","AbortController","abort","map","item","id","recipe_name","meal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;;AAKC,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA,oBACKP,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QAClBQ,OADkB;AAAA,QACTC,UADS,kBAEzB;;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,aAAa,GACZQ,GADD,CACM,cAAaC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+B,EADlD,EAECC,IAFD,CAEMC,GAAG,IAAIL,UAAU,CAACK,GAAG,CAACC,IAAL,CAFvB,EAGCC,KAHD,CAGOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,GAAhB,CAHd;AAKH,GANQ,EAMN,CAACN,OAAD,CANM,CAAT;AAQAY,EAAAA,eAAe,CAACC,KAAhB;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ,EASKb,OAAO,CAACc,GAAR,CAAYC,IAAI,IAEjB,oBAAC,IAAD;AAAO,IAAA,EAAE,EAAG,YAAWA,IAAI,CAACC,EAAG,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCD,IAAI,CAACE,WAAxC,EAAqDF,IAAI,CAACG,IAA1D,CAFC,CATL,EAcQ,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAdR,EAkBO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBP,CADJ,CAsBI;AACA;AACA;AAxBJ;AA0BH,CAtCA;;AAuCD,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {axiosWithAuth} from '../utils/axiosWithAuth'\nimport Logout from './Logout'\nimport { Redirect, Link } from \"react-router-dom\";\n\n\n\n\n const ChefDash = (props) => {\n    const [recipes, setRecipes] = useState([])\n    //get posts from api server using axioswithAuth\n    useEffect(() => {\n        axiosWithAuth()\n        .get(`/auth/user/${localStorage.getItem('userId')}`)\n        .then(res => setRecipes(res.data))\n        .catch(err => console.log(err.res))\n\n    }, [recipes])\n\n    AbortController.abort() \n    return (\n        <div>\n            \n            <h1>Chef DashBoard</h1>\n            <h1>Recipes</h1>\n           \n\n            \n          \n          \n            {recipes.map(item => (\n            \n            <Link  to={`/recipes/${item.id}`}>{item.recipe_name}{item.meal}</Link> \n                     \n           ))}\n                <Link to='/create'>\n                    Create Recipe\n                </Link>\n\n               <Logout />\n                \n        </div>\n        //Have an Add Button and this button\n        //will take us to the Add Recipe Form\n        //Put an onClick inside the div\n    )\n}\nexport default ChefDash;"]},"metadata":{},"sourceType":"module"}